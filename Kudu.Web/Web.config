<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=169433
  -->
<configuration>
  <configSections>
    <section name="kudu.management" type="Kudu.SiteManagement.Configuration.Section.KuduConfigurationSection, Kudu.SiteManagement, Version=30.0.0.0, Culture=neutral" />
  </configSections>
  <appSettings>
    <!-- Settings used everywhere -->
    <add key="webpages:Version" value="3.0.0.0" />
    <add key="webpages:Enabled" value="false" />
    <add key="PreserveLoginUrl" value="true" />
    <add key="ClientValidationEnabled" value="true" />
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />
    <!-- Settings used only in Azure Kudu.Web -->
  </appSettings>
  <!--
    Change enableCustomHostNames to true in order to support end user managed custom hostnames
    in addition to the default hostnames for both application and service sites.

    This is in addition to custom default hostname option, in that it
    allows you to add and manage additional hostnames for an application.
    -->
  <kudu.management enableCustomHostNames="false">
    <serviceSite path="..\Kudu.Services.Web" />
    <applications path="..\apps" />
    <!--
    IIS Shared Configuration
    ======================================================================================================================
    
    If your IIS config file is in a different location (usually due to running a shared configration) you can specify the 
    new location like this:
    
    <iisConfigurationFile path="c:\myconfig.config"/>

    
    Defining custom host names:
    ======================================================================================================================

    To support custom default hostnames inplace of the localhost and random port usage,
    add a bindings section to the configuration.
    Values are domain suffixes you wish to have added to the Kudu application name.
    So an application binding with the url "kudu.localtest.me" and a Kudu application
    called "Test Site" will result in a url of "test-site.kudu.localtest.me".
        
    ### Bindings Section Example:
    
    <bindings>
      <applicationBinding scheme="http" url="kudu.localtest.me" />
      <applicationBinding scheme="https" url="kudu.localtest.me" certificate="*.localtest.me" require-sni="true" />
      
      <serviceBinding scheme="http" url="scm.kudu.localtest.me" />
      <serviceBinding scheme="https" url="scm.kudu.localtest.me" certificate="*.localtest.me" require-sni="true" />
    </bindings>       
    
    Note: localtest.me is an external service that always points to 127.0.0.1
    so the default value below can be used for local testing of the configuration.
    
    There is two types of bindings:
     - Application Binding: Adds a binding sufix for the application site for new Kudu applications.
     - Service Binding: Adds a binding sufix for the service site for new Kudu applications.
    
    The following attributes are support for binding configurations:
    
     - url:         (Required) The url suffix for bindings. Supported formats:
                        kudu.localtest.me - only specify hostname suffix
                        kudu.localtest.me:8080 - uses suffix and port 8080
                        192.168.100.3:80:kudu.localtest.me - binds to internal ip, port 80, with hostname suffix
                
     - scheme:      The scheme for bindings, either 'http' or 'https', if the attribute is not set, default is 'http'.
     
     - certificate: Friendly name of the certificate to be used for https bindings.
                    This is required when the scheme is set to 'https', otherwise it has no meaning.
                    
     - require-sni: Sets if SNI is required for https bindings.
                    This is only used for https bindings and is only supported on IIS 8 and above.
                 
    ### Remarks for IIS 7 Support:
    
    Since IIS 7 does not support SNI (Server Name Indication) there is some limitations on the used certificates when it
    comes to support for HTTPS.
    
    This means that IIS 7 requires the use of wildcard certificates. 
              
              
    ### Certificate Stores:
    ======================================================================================================================
    
    By default StoreName.My is used when resolving certificates, but since IIS 8 allows us to use multiple stores, it
    is possible to configure which stores to search when resolving certificates.
    
    To do this add a certificateStores configuration block as in the example:
    
    <certificateStores>
      <store name="My" />
      <store name="Root" />
    </certificateStores>
    
    A list of valid names can be found at: 
    https://msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.storename%28v=vs.110%29.aspx

    Using these settings allows some flexibility in the way IIS bindings are created by default.
    
    ### Credential of Basic Authentication
    =======================================
    The default credential that used by Kudu.Web is admin/kudu. 
    It can be changed with following configuration:
    <basicAuth username="user" password="password" />    
    
    -->
  </kudu.management>
  <system.web>
    <compilation debug="true" targetFramework="4.6">
      <assemblies>
        <add assembly="System.Web.Abstractions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Helpers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Routing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Mvc, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.WebPages, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      </assemblies>
    </compilation>
    <httpRuntime requestValidationMode="2.0" />
    <pages controlRenderingCompatibilityVersion="4.0" />
  </system.web>
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
    <modules runAllManagedModulesForAllRequests="true" />
    <staticContent>
      <!-- Web fonts -->
      <remove fileExtension=".eot" />
      <remove fileExtension=".svg" />
      <remove fileExtension=".ttf" />
      <remove fileExtension=".woff" />
      <remove fileExtension=".woff2" />
      <mimeMap fileExtension=".eot" mimeType="application/vnd.ms-fontobject" />
      <mimeMap fileExtension=".svg" mimeType="image/svg+xml" />
      <mimeMap fileExtension=".ttf" mimeType="application/octet-stream" />
      <mimeMap fileExtension=".woff" mimeType="application/x-font-woff" />
      <mimeMap fileExtension=".woff2" mimeType="font/woff2" />
    </staticContent>
  </system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages.Deployment" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-2.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages.Razor" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-2.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Razor" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-2.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.2.0" newVersion="5.2.2.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-9.0.0.0" newVersion="9.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>